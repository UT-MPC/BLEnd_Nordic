<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_release_v1_0_0\app_thingy_s132.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_release_v1_0_0\app_thingy_s132.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Oct 11 16:55:40 2018
<BR><P>
<H3>Maximum Stack Usage =        672 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ble_evt_dispatch &rArr; ble_conn_state_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[b]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SysTick_Handler</a><BR>
 <LI><a href="#[1b]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">CCM_AAR_IRQHandler</a><BR>
 <LI><a href="#[d7]">m_ioext_osc_status_change</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">app_error_handler_bare</a><BR>
 <LI><a href="#[e8]">queue_process</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e8]">queue_process</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">BusFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1b]">CCM_AAR_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1f]">COMP_LPCOMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1a]">ECB_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[30]">FPU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[12]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2f]">I2S_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2a]">MWU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[5]">MemoryManagement_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[11]">NFCT_IRQHandler</a> from hal_nfc_t2t.o(i.NFCT_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[29]">PDM_IRQHandler</a> from nrf_drv_pdm.o(i.PDM_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[c]">POWER_CLOCK_IRQHandler</a> from nrf_drv_clock.o(i.POWER_CLOCK_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[28]">PWM0_IRQHandler</a> from nrf_drv_pwm.o(i.PWM0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2b]">PWM1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2c]">PWM2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1e]">QDEC_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[d]">RADIO_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[19]">RNG_IRQHandler</a> from nrf_drv_rng.o(i.RNG_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[17]">RTC0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1d]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2e]">RTC2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[13]">SAADC_IRQHandler</a> from nrf_drv_saadc.o(i.SAADC_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[f]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</a> from nrf_drv_twi.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[10]">SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2d]">SPIM2_SPIS2_SPI2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[20]">SWI0_EGU0_IRQHandler</a> from app_timer.o(i.SWI0_EGU0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[21]">SWI1_EGU1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[22]">SWI2_EGU2_IRQHandler</a> from softdevice_handler.o(i.SWI2_EGU2_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[23]">SWI3_EGU3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[24]">SWI4_EGU4_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[25]">SWI5_EGU5_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[32]">SystemInit</a> from system_nrf52.o(i.SystemInit) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[18]">TEMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[14]">TIMER0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[15]">TIMER1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[16]">TIMER2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[26]">TIMER3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[27]">TIMER4_IRQHandler</a> from hal_nfc_t2t.o(i.TIMER4_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[e]">UARTE0_UART0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1c]">WDT_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[33]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[35]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[4e]">beacon_advertiser_error_handler</a> from m_ble.o(i.beacon_advertiser_error_handler) referenced from m_ble.o(i.tcs_evt_handler)
 <LI><a href="#[3c]">beacon_count_timer_handler</a> from blend.o(i.beacon_count_timer_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[3e]">beacon_slack_timer_handler</a> from blend.o(i.beacon_slack_timer_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[45]">ble_dfu_evt_handler</a> from m_ble.o(i.ble_dfu_evt_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[42]">ble_evt_dispatch</a> from m_ble.o(i.ble_evt_dispatch) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[39]">ble_evt_handler</a> from blend.o(i.ble_evt_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[4f]">ble_uis_led_write_handler</a> from m_ui.o(i.ble_uis_led_write_handler) referenced from m_ui.o(i.thingy_ui_service_init)
 <LI><a href="#[50]">ble_uis_pin_write_handler</a> from m_ui.o(i.ble_uis_pin_write_handler) referenced from m_ui.o(i.thingy_ui_service_init)
 <LI><a href="#[51]">button_evt_handler</a> from m_ui.o(i.button_evt_handler) referenced from m_ui.o(.constdata)
 <LI><a href="#[38]">detection_delay_timeout_handler</a> from app_button.o(i.detection_delay_timeout_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[1]">fs_event_handler</a> from fds.o(i.fs_event_handler) referenced 2 times from fds.o(fs_data)
 <LI><a href="#[37]">gpiote_event_handler</a> from app_button.o(i.gpiote_event_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[3b]">half_epoch_timer_handler</a> from blend.o(i.half_epoch_timer_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[49]">m_blend_handler</a> from main.o(i.m_blend_handler) referenced from main.o(i.main)
 <LI><a href="#[3f]">m_light_timer_handler</a> from drv_ext_light.o(i.m_light_timer_handler) referenced from drv_ext_light.o(i.drv_ext_light_init)
 <LI><a href="#[36]">m_timeslot_callback</a> from advertiser_beacon_timeslot.o(i.m_timeslot_callback) referenced from advertiser_beacon_timeslot.o(i.app_beacon_start)
 <LI><a href="#[31]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[4a]">nrf_log_backend_serial_hexdump_handler</a> from nrf_log_backend_serial.o(i.nrf_log_backend_serial_hexdump_handler) referenced from nrf_log_backend_serial.o(i.nrf_log_backend_hexdump_handler_get)
 <LI><a href="#[4b]">nrf_log_backend_serial_std_handler</a> from nrf_log_backend_serial.o(i.nrf_log_backend_serial_std_handler) referenced from nrf_log_backend_serial.o(i.nrf_log_backend_std_handler_get)
 <LI><a href="#[3d]">one_beacon_timer_handler</a> from blend.o(i.one_beacon_timer_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[3a]">scan_timer_handler</a> from blend.o(i.scan_timer_handler) referenced from blend.o(i.blend_init)
 <LI><a href="#[4c]">softdevice_evt_get</a> from softdevice_handler_appsh.o(i.softdevice_evt_get) referenced from softdevice_handler_appsh.o(i.softdevice_evt_schedule)
 <LI><a href="#[41]">softdevice_evt_schedule</a> from softdevice_handler_appsh.o(i.softdevice_evt_schedule) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[4d]">softdevice_fault_handler</a> from softdevice_handler.o(i.softdevice_fault_handler) referenced from softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[43]">sys_evt_dispatch</a> from m_ble.o(i.sys_evt_dispatch) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[40]">tc_fds_evt_handler</a> from m_ble_flash.o(i.tc_fds_evt_handler) referenced from m_ble_flash.o(i.m_ble_flash_init)
 <LI><a href="#[44]">tcs_evt_handler</a> from m_ble.o(i.tcs_evt_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[47]">thingy_ui_on_ble_evt</a> from m_ui.o(i.thingy_ui_on_ble_evt) referenced from m_ui.o(i.m_ui_init)
 <LI><a href="#[48]">thingy_ui_service_init</a> from m_ui.o(i.thingy_ui_service_init) referenced from m_ui.o(i.m_ui_init)
 <LI><a href="#[34]">timeout_handler_scheduled_exec</a> from app_timer.o(i.timeout_handler_scheduled_exec) referenced from app_timer.o(i.RTC1_IRQHandler)
 <LI><a href="#[46]">ui_fds_evt_handler</a> from m_ui_flash.o(i.ui_fds_evt_handler) referenced from m_ui_flash.o(i.m_ui_flash_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[33]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[12b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[52]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[12c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[12d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[12e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[12f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[130]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>COMP_LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPIM2_SPIS2_SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SWI1_EGU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SWI3_EGU3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SWI4_EGU4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SWI5_EGU5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UARTE0_UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_sched_start
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_beacon_timer_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[131]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[132]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_hexdump_handler
</UL>

<P><STRONG><a name="[133]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_start
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_push
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_std_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_hexdump_handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[137]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_epoch_timer_handler
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[106]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_std_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_hexdump_handler
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[13a]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[13c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[5c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[63]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[53]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[13e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 420 bytes, Stack size 88 bytes, nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NFCT_IRQHandler</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, hal_nfc_t2t.o(i.NFCT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NFCT_IRQHandler &rArr; nrf_drv_clock_hfclk_request &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_request
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PDM_IRQHandler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, nrf_drv_pdm.o(i.PDM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PDM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, nrf_drv_clock.o(i.POWER_CLOCK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = POWER_CLOCK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PWM0_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, nrf_drv_pwm.o(i.PWM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PWM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RNG_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, nrf_drv_rng.o(i.RNG_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RNG_IRQHandler &rArr; nrf_queue_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_push
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_is_full
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC1_IRQHandler</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = RTC1_IRQHandler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SAADC_IRQHandler</STRONG> (Thumb, 342 bytes, Stack size 48 bytes, nrf_drv_saadc.o(i.SAADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SAADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>SEGGER_RTT_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, segger_rtt.o(i.SEGGER_RTT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_init
</UL>

<P><STRONG><a name="[70]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_std_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_hexdump_handler
</UL>

<P><STRONG><a name="[f]"></a>SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, nrf_drv_twi.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SWI0_EGU0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_timer.o(i.SWI0_EGU0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SWI0_EGU0_IRQHandler &rArr; timer_list_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SWI2_EGU2_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, softdevice_handler.o(i.SWI2_EGU2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = SWI2_EGU2_IRQHandler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SystemInit</STRONG> (Thumb, 596 bytes, Stack size 12 bytes, system_nrf52.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, hal_nfc_t2t.o(i.TIMER4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIMER4_IRQHandler &rArr; nrf_drv_clock_hfclk_release &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>__0snprintf</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[141]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[121]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_std_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_serial_hexdump_handler
</UL>

<P><STRONG><a name="[142]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[143]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[117]"></a>__ARM_common_memclr4_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.__ARM_common_memclr4_10))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>__ARM_common_memclr4_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advertising.o(i.__ARM_common_memclr4_7))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[f9]"></a>__ARM_common_memcpy4_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, m_ui.o(i.__ARM_common_memcpy4_5))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
</UL>

<P><STRONG><a name="[79]"></a>__ARM_common_memcpy4_7</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, segger_rtt.o(i.__ARM_common_memcpy4_7))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[7c]"></a>__hardfp_round</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, round.o(i.__hardfp_round))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[144]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[145]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[146]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[83]"></a>adv_data_encode</STRONG> (Thumb, 962 bytes, Stack size 48 bytes, ble_advdata.o(i.adv_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[85]"></a>advertising_start</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, blend.o(i.advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = advertising_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_timer_handler
</UL>

<P><STRONG><a name="[87]"></a>app_beacon_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.app_beacon_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_beacon_init &rArr; nrf_log_frontend_std_0
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[89]"></a>app_beacon_on_sys_evt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, advertiser_beacon_timeslot.o(i.app_beacon_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_beacon_on_sys_evt &rArr; nrf_log_frontend_std_1
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[8b]"></a>app_beacon_start</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.app_beacon_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_beacon_start &rArr; nrf_log_frontend_std_0
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[8c]"></a>app_beacon_stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.app_beacon_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_beacon_stop &rArr; nrf_log_frontend_std_0
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[8d]"></a>app_button_enable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_button.o(i.app_button_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_button_enable &rArr; nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[8f]"></a>app_button_init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_button.o(i.app_button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_button_init &rArr; nrf_drv_gpiote_in_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[94]"></a>app_error_fault_handler</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, main.o(i.app_error_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_strerror_find
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_6
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_fault_handler
</UL>

<P><STRONG><a name="[6d]"></a>app_error_handler_bare</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_fds_evt_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_on_ble_evt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_advertiser_error_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_sched_start
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_advdata_set
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_fds_evt_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_evt_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_beacon_timer_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_epoch_timer_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_slack_timer_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_timer_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_handler_scheduled_exec
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>app_sched_event_put</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, app_scheduler.o(i.app_sched_event_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sched_event_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_schedule
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[fe]"></a>app_sched_execute</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_scheduler.o(i.app_sched_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sched_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
</UL>

<P><STRONG><a name="[114]"></a>app_sched_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_scheduler.o(i.app_sched_init))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>app_timer_cnt_diff_compute</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_cnt_diff_compute))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_handler
</UL>

<P><STRONG><a name="[9d]"></a>app_timer_cnt_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_cnt_get))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_beacon_timer_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_handler
</UL>

<P><STRONG><a name="[93]"></a>app_timer_create</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[99]"></a>app_timer_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>app_timer_start</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_sched_start
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_beacon_timer_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_epoch_timer_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[9b]"></a>app_timer_stop</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_timer_stop &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_epoch_timer_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[67]"></a>app_util_critical_region_enter</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, app_util_platform.o(i.app_util_critical_region_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_rand
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_request
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_release
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_utilization_get
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_push
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>app_util_critical_region_exit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_exit))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_rand
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_request
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_release
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_utilization_get
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_push
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>beacon_count_set</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, blend.o(i.beacon_count_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = beacon_count_set &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_diff_compute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_sched_start
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_timer_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_epoch_timer_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_timer_handler
</UL>

<P><STRONG><a name="[3c]"></a>beacon_count_timer_handler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, blend.o(i.beacon_count_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = beacon_count_timer_handler &rArr; advertising_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[3e]"></a>beacon_slack_timer_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, blend.o(i.beacon_slack_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = beacon_slack_timer_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[9f]"></a>ble_advdata_set</STRONG> (Thumb, 120 bytes, Stack size 104 bytes, ble_advdata.o(i.ble_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[a0]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[a2]"></a>ble_advertising_on_sys_evt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[a1]"></a>ble_advertising_start</STRONG> (Thumb, 498 bytes, Stack size 56 bytes, ble_advertising.o(i.ble_advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_7
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
</UL>

<P><STRONG><a name="[128]"></a>ble_conn_params_change_conn_params</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_conn_params.o(i.ble_conn_params_change_conn_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_conn_params_change_conn_params
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[a5]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[a8]"></a>ble_conn_state_on_ble_evt</STRONG> (Thumb, 272 bytes, Stack size 168 bytes, ble_conn_state.o(i.ble_conn_state_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = ble_conn_state_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_first_key_index_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_bulk_update_by_key
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[108]"></a>ble_dfu_init</STRONG> (Thumb, 314 bytes, Stack size 96 bytes, ble_dfu.o(i.ble_dfu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_dfu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[ae]"></a>ble_dfu_on_ble_evt</STRONG> (Thumb, 598 bytes, Stack size 80 bytes, ble_dfu.o(i.ble_dfu_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_dfu_on_ble_evt &rArr; nrf_log_frontend_std_2
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_indication_enabled
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[af]"></a>ble_srv_is_indication_enabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_srv_common.o(i.ble_srv_is_indication_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
</UL>

<P><STRONG><a name="[a6]"></a>ble_srv_is_notification_enabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_srv_common.o(i.ble_srv_is_notification_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
</UL>

<P><STRONG><a name="[107]"></a>ble_tcs_init</STRONG> (Thumb, 1230 bytes, Stack size 96 bytes, ble_tcs.o(i.ble_tcs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_tcs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[b2]"></a>ble_tcs_mtu_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ble_tcs.o(i.ble_tcs_mtu_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_tcs_mtu_set
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[b1]"></a>ble_tcs_on_ble_evt</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, ble_tcs.o(i.ble_tcs_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = ble_tcs_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[129]"></a>ble_uis_init</STRONG> (Thumb, 596 bytes, Stack size 104 bytes, ble_uis.o(i.ble_uis_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_uis_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
</UL>

<P><STRONG><a name="[b5]"></a>ble_uis_on_ble_evt</STRONG> (Thumb, 496 bytes, Stack size 48 bytes, ble_uis.o(i.ble_uis_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = ble_uis_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
</UL>

<P><STRONG><a name="[bd]"></a>ble_uis_on_button_change</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ble_uis.o(i.ble_uis_on_button_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_uis_on_button_change
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_evt_handler
</UL>

<P><STRONG><a name="[b7]"></a>blend_advdata_set</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, blend.o(i.blend_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = blend_advdata_set &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>blend_init</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, blend.o(i.blend_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = blend_init &rArr; m_ble_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>blend_sched_start</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, blend.o(i.blend_sched_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = blend_sched_start &rArr; beacon_count_set &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>current_int_priority_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_util_platform.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
</UL>

<P><STRONG><a name="[c1]"></a>drv_ext_gpio_cfg</STRONG> (Thumb, 758 bytes, Stack size 32 bytes, drv_ext_gpio.o(i.drv_ext_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = drv_ext_gpio_cfg &rArr; drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_longslewrate_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
</UL>

<P><STRONG><a name="[cb]"></a>drv_ext_gpio_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_ext_gpio.o(i.drv_ext_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drv_ext_gpio_init &rArr; drv_ext_gpio_reset &rArr; drv_sx1509_reset &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
</UL>

<P><STRONG><a name="[bf]"></a>drv_ext_gpio_reg_data_init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_reg_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drv_ext_gpio_reg_data_init &rArr; drv_sx1509_data_set &rArr; reg_set &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
</UL>

<P><STRONG><a name="[cd]"></a>drv_ext_gpio_reset</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, drv_ext_gpio.o(i.drv_ext_gpio_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = drv_ext_gpio_reset &rArr; drv_sx1509_reset &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
</UL>

<P><STRONG><a name="[d0]"></a>drv_ext_light_init</STRONG> (Thumb, 1122 bytes, Stack size 32 bytes, drv_ext_light.o(i.drv_ext_light_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = drv_ext_light_init &rArr; drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_misc_modify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[d4]"></a>drv_ext_light_off</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, drv_ext_light.o(i.drv_ext_light_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[d6]"></a>drv_ext_light_rgb_intensity_set</STRONG> (Thumb, 538 bytes, Stack size 32 bytes, drv_ext_light.o(i.drv_ext_light_rgb_intensity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = drv_ext_light_rgb_intensity_set &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[d9]"></a>drv_ext_light_rgb_sequence</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, drv_ext_light.o(i.drv_ext_light_rgb_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_ext_light_rgb_sequence &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_extender_counters_resync
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[db]"></a>drv_sx1509_clock_modify</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_clock_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_sx1509_clock_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
</UL>

<P><STRONG><a name="[c4]"></a>drv_sx1509_close</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_sx1509_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
</UL>

<P><STRONG><a name="[d3]"></a>drv_sx1509_data_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_data_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_data_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[ce]"></a>drv_sx1509_data_set</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = drv_sx1509_data_set &rArr; reg_set &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
</UL>

<P><STRONG><a name="[ca]"></a>drv_sx1509_dir_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_dir_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_dir_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[cc]"></a>drv_sx1509_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_sx1509.o(i.drv_sx1509_init))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
</UL>

<P><STRONG><a name="[c7]"></a>drv_sx1509_inpbufdisable_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_inpbufdisable_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_inpbufdisable_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[e0]"></a>drv_sx1509_leddriverenable_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_leddriverenable_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_leddriverenable_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[c9]"></a>drv_sx1509_longslewrate_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_longslewrate_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_longslewrate_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[d2]"></a>drv_sx1509_misc_modify</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_misc_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_sx1509_misc_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[e1]"></a>drv_sx1509_onoffcfgx_modify</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_onoffcfgx_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_onoffcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[c3]"></a>drv_sx1509_open</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = drv_sx1509_open &rArr; twi_manager_request &rArr; nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
</UL>

<P><STRONG><a name="[c8]"></a>drv_sx1509_opendrain_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_opendrain_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_opendrain_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[c6]"></a>drv_sx1509_pulldown_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_pulldown_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_pulldown_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[c5]"></a>drv_sx1509_pullup_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_pullup_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[cf]"></a>drv_sx1509_reset</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, drv_sx1509.o(i.drv_sx1509_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = drv_sx1509_reset &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
</UL>

<P><STRONG><a name="[e5]"></a>drv_sx1509_risefallcfgx_modify</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_risefallcfgx_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[e6]"></a>fds_gc</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, fds.o(i.fds_gc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = fds_gc &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
</UL>

<P><STRONG><a name="[e9]"></a>fds_init</STRONG> (Thumb, 614 bytes, Stack size 88 bytes, fds.o(i.fds_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = fds_init &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
</UL>

<P><STRONG><a name="[eb]"></a>fds_record_close</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fds.o(i.fds_record_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fds_record_close &rArr; record_find_by_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
</UL>

<P><STRONG><a name="[ed]"></a>fds_record_find</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, fds.o(i.fds_record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fds_record_find &rArr; record_find
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
</UL>

<P><STRONG><a name="[ef]"></a>fds_record_open</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fds.o(i.fds_record_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fds_record_open &rArr; record_find_by_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
</UL>

<P><STRONG><a name="[f0]"></a>fds_record_update</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fds.o(i.fds_record_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = fds_record_update &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
</UL>

<P><STRONG><a name="[f2]"></a>fds_record_write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fds.o(i.fds_record_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = fds_record_write &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
</UL>

<P><STRONG><a name="[fd]"></a>fds_register</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fds.o(i.fds_register))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
</UL>

<P><STRONG><a name="[f3]"></a>fs_erase</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, fstorage.o(i.fs_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fs_erase &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
</UL>

<P><STRONG><a name="[ea]"></a>fs_init</STRONG> (Thumb, 186 bytes, Stack size 28 bytes, fstorage.o(i.fs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[a3]"></a>fs_queued_op_count_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fstorage.o(i.fs_queued_op_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[f5]"></a>fs_store</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, fstorage.o(i.fs_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
</UL>

<P><STRONG><a name="[f6]"></a>fs_sys_event_handler</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, fstorage.o(i.fs_sys_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fs_sys_event_handler &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[3b]"></a>half_epoch_timer_handler</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, blend.o(i.half_epoch_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = half_epoch_timer_handler &rArr; beacon_count_set &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[f8]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = intern_softdevice_events_execute &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_get
</UL>

<P><STRONG><a name="[da]"></a>io_extender_counters_resync</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, drv_ext_light.o(i.io_extender_counters_resync))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
</UL>

<P><STRONG><a name="[b4]"></a>led_set</STRONG> (Thumb, 448 bytes, Stack size 56 bytes, m_ui.o(i.led_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
</UL>

<P><STRONG><a name="[fa]"></a>m_ble_flash_config_load</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, m_ble_flash.o(i.m_ble_flash_config_load), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[fb]"></a>m_ble_flash_config_store</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, m_ble_flash.o(i.m_ble_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = m_ble_flash_config_store &rArr; fds_record_update &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[fc]"></a>m_ble_flash_init</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, m_ble_flash.o(i.m_ble_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = m_ble_flash_init &rArr; fds_init &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[ba]"></a>m_ble_init</STRONG> (Thumb, 1642 bytes, Stack size 56 bytes, m_ble.o(i.m_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = m_ble_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_app_ram_start_get
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_rand
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_bytes_available
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
</UL>

<P><STRONG><a name="[10f]"></a>m_handle_radio_disabled</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.m_handle_radio_disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = m_handle_radio_disabled
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_timeslot_callback
</UL>

<P><STRONG><a name="[10a]"></a>m_handle_start</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, advertiser_beacon_timeslot.o(i.m_handle_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = m_handle_start &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_timeslot_callback
</UL>

<P><STRONG><a name="[110]"></a>m_ui_flash_config_load</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, m_ui_flash.o(i.m_ui_flash_config_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = m_ui_flash_config_load &rArr; fds_record_find &rArr; record_find
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
</UL>

<P><STRONG><a name="[b3]"></a>m_ui_flash_config_store</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, m_ui_flash.o(i.m_ui_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = m_ui_flash_config_store &rArr; fds_record_update &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
</UL>

<P><STRONG><a name="[111]"></a>m_ui_flash_init</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, m_ui_flash.o(i.m_ui_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = m_ui_flash_init &rArr; fds_init &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
</UL>

<P><STRONG><a name="[112]"></a>m_ui_init</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, m_ui.o(i.m_ui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = m_ui_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>m_ui_led_set_event</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, m_ui.o(i.m_ui_led_set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>

<P><STRONG><a name="[31]"></a>main</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = main &rArr; support_func_configure_io_startup &rArr; configure_default_ioext_gpio_state &rArr; drv_ext_gpio_cfg &rArr; drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_sched_start
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_advdata_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b9]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_init
</UL>

<P><STRONG><a name="[78]"></a>nrf_drv_clock_hfclk_release</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, nrf_drv_clock.o(i.nrf_drv_clock_hfclk_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_drv_clock_hfclk_release &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>nrf_drv_clock_hfclk_request</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, nrf_drv_clock.o(i.nrf_drv_clock_hfclk_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_drv_clock_hfclk_request &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCT_IRQHandler
</UL>

<P><STRONG><a name="[118]"></a>nrf_drv_clock_on_sd_enable</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, nrf_drv_clock.o(i.nrf_drv_clock_on_sd_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_drv_clock_on_sd_enable &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[77]"></a>nrf_drv_clock_on_soc_event</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, nrf_drv_clock.o(i.nrf_drv_clock_on_soc_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_clock_on_soc_event
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
</UL>

<P><STRONG><a name="[119]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
</UL>

<P><STRONG><a name="[8e]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 186 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[92]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_drv_gpiote_in_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[c2]"></a>nrf_drv_gpiote_in_is_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[91]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_init
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[90]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_is_init))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[104]"></a>nrf_drv_rng_bytes_available</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nrf_drv_rng.o(i.nrf_drv_rng_bytes_available))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_drv_rng_bytes_available &rArr; nrf_queue_utilization_get &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_utilization_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[105]"></a>nrf_drv_rng_rand</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, nrf_drv_rng.o(i.nrf_drv_rng_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = nrf_drv_rng_rand &rArr; nrf_queue_read &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_queue_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[dd]"></a>nrf_drv_twi_disable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_drv_twi_disable))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>

<P><STRONG><a name="[e3]"></a>nrf_drv_twi_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_drv_twi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
</UL>

<P><STRONG><a name="[11c]"></a>nrf_drv_twi_init</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, nrf_drv_twi.o(i.nrf_drv_twi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
</UL>

<P><STRONG><a name="[11e]"></a>nrf_drv_twi_rx</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.nrf_drv_twi_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = nrf_drv_twi_rx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>

<P><STRONG><a name="[e4]"></a>nrf_drv_twi_tx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.nrf_drv_twi_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>

<P><STRONG><a name="[de]"></a>nrf_drv_twi_uninit</STRONG> (Thumb, 152 bytes, Stack size 4 bytes, nrf_drv_twi.o(i.nrf_drv_twi_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nrf_drv_twi_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>

<P><STRONG><a name="[11f]"></a>nrf_drv_twi_xfer</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, nrf_drv_twi.o(i.nrf_drv_twi_xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>

<P><STRONG><a name="[124]"></a>nrf_log_backend_hexdump_handler_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nrf_log_backend_serial.o(i.nrf_log_backend_hexdump_handler_get))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_init
</UL>

<P><STRONG><a name="[120]"></a>nrf_log_backend_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nrf_log_backend_serial.o(i.nrf_log_backend_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_log_backend_init &rArr; SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_init
</UL>

<P><STRONG><a name="[123]"></a>nrf_log_backend_std_handler_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nrf_log_backend_serial.o(i.nrf_log_backend_std_handler_get))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_init
</UL>

<P><STRONG><a name="[109]"></a>nrf_log_frontend_hexdump</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, nrf_log_frontend.o(i.nrf_log_frontend_hexdump))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nrf_log_frontend_hexdump
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
</UL>

<P><STRONG><a name="[88]"></a>nrf_log_frontend_std_0</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_log_frontend_std_0
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_fds_evt_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_stop
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_evt_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_fds_evt_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_evt_handler
</UL>

<P><STRONG><a name="[8a]"></a>nrf_log_frontend_std_1</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_log_frontend_std_1
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_on_sys_evt
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
</UL>

<P><STRONG><a name="[b0]"></a>nrf_log_frontend_std_2</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_log_frontend_std_2
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_fds_evt_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_blend_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_fds_evt_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
</UL>

<P><STRONG><a name="[c0]"></a>nrf_log_frontend_std_3</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_log_frontend_std_3
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_fds_evt_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_fds_evt_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
</UL>

<P><STRONG><a name="[b6]"></a>nrf_log_frontend_std_4</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_log_frontend_std_4
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_pin_write_handler
</UL>

<P><STRONG><a name="[97]"></a>nrf_log_frontend_std_6</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nrf_log_frontend_std_6
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>

<P><STRONG><a name="[113]"></a>nrf_log_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, nrf_log_frontend.o(i.nrf_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_log_init &rArr; nrf_log_backend_init &rArr; SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_std_handler_get
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_backend_hexdump_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>nrf_log_push</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, nrf_log_frontend.o(i.nrf_log_push))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
</UL>

<P><STRONG><a name="[6a]"></a>nrf_queue_is_full</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_queue.o(i.nrf_queue_is_full))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>nrf_queue_push</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, nrf_queue.o(i.nrf_queue_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_queue_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_IRQHandler
</UL>

<P><STRONG><a name="[11b]"></a>nrf_queue_read</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, nrf_queue.o(i.nrf_queue_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_queue_read &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_rand
</UL>

<P><STRONG><a name="[11a]"></a>nrf_queue_utilization_get</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, nrf_queue.o(i.nrf_queue_utilization_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_queue_utilization_get &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_bytes_available
</UL>

<P><STRONG><a name="[95]"></a>nrf_strerror_find</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nrf_strerror.o(i.nrf_strerror_find))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>

<P><STRONG><a name="[3d]"></a>one_beacon_timer_handler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, blend.o(i.one_beacon_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = one_beacon_timer_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[3a]"></a>scan_timer_handler</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, blend.o(i.scan_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = scan_timer_handler &rArr; advertising_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_count_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[ac]"></a>sdk_mapped_flags_bulk_update_by_key</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_bulk_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[ad]"></a>sdk_mapped_flags_first_key_index_get</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_first_key_index_get))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[aa]"></a>sdk_mapped_flags_key_list_get</STRONG> (Thumb, 66 bytes, Stack size 88 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_key_list_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sdk_mapped_flags_key_list_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[a9]"></a>sdk_mapped_flags_update_by_key</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdk_mapped_flags_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[100]"></a>softdevice_app_ram_start_get</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, softdevice_handler.o(i.softdevice_app_ram_start_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = softdevice_app_ram_start_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[102]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[101]"></a>softdevice_enable</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = softdevice_enable &rArr; nrf_log_frontend_std_1
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[4c]"></a>softdevice_evt_get</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, softdevice_handler_appsh.o(i.softdevice_evt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = softdevice_evt_get &rArr; intern_softdevice_events_execute &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler_appsh.o(i.softdevice_evt_schedule)
</UL>
<P><STRONG><a name="[41]"></a>softdevice_evt_schedule</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, softdevice_handler_appsh.o(i.softdevice_evt_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = softdevice_evt_schedule &rArr; app_sched_event_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[4d]"></a>softdevice_fault_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = softdevice_fault_handler &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[ff]"></a>softdevice_handler_init</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = softdevice_handler_init &rArr; nrf_drv_clock_on_sd_enable &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[68]"></a>softdevice_handler_is_enabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_handler_is_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_rand
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_rng_bytes_available
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_request
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_hfclk_release
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_IRQHandler
</UL>

<P><STRONG><a name="[103]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_sys_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[115]"></a>support_func_configure_io_startup</STRONG> (Thumb, 436 bytes, Stack size 232 bytes, support_func.o(i.support_func_configure_io_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = support_func_configure_io_startup &rArr; configure_default_ioext_gpio_state &rArr; drv_ext_gpio_cfg &rArr; drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_default_ioext_gpio_state
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>sx150x_led_drv_calc_convert</STRONG> (Thumb, 1444 bytes, Stack size 64 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = sx150x_led_drv_calc_convert &rArr; __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diff_above_limit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[10e]"></a>sx150x_led_drv_calc_fade_supp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_fade_supp))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[d1]"></a>sx150x_led_drv_calc_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_init))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[116]"></a>twi_manager_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, twi_manager.o(i.twi_manager_init))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>twi_manager_request</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, twi_manager.o(i.twi_manager_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = twi_manager_request &rArr; nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>m_blend_handler</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, main.o(i.m_blend_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = m_blend_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_hexdump
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_diff_compute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[4e]"></a>beacon_advertiser_error_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, m_ble.o(i.beacon_advertiser_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = beacon_advertiser_error_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.tcs_evt_handler)
</UL>
<P><STRONG><a name="[45]"></a>ble_dfu_evt_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, m_ble.o(i.ble_dfu_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_dfu_evt_handler &rArr; nrf_log_frontend_std_0
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[42]"></a>ble_evt_dispatch</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, m_ble.o(i.ble_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = ble_evt_dispatch &rArr; ble_conn_state_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_on_ble_evt
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_mtu_set
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[43]"></a>sys_evt_dispatch</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, m_ble.o(i.sys_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = sys_evt_dispatch &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_on_sys_evt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[44]"></a>tcs_evt_handler</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, m_ble.o(i.tcs_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = tcs_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_mtu_set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_stop
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[40]"></a>tc_fds_evt_handler</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, m_ble_flash.o(i.tc_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = tc_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble_flash.o(i.m_ble_flash_init)
</UL>
<P><STRONG><a name="[4f]"></a>ble_uis_led_write_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, m_ui.o(i.ble_uis_led_write_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = ble_uis_led_write_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.thingy_ui_service_init)
</UL>
<P><STRONG><a name="[50]"></a>ble_uis_pin_write_handler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, m_ui.o(i.ble_uis_pin_write_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_uis_pin_write_handler &rArr; nrf_log_frontend_std_4
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.thingy_ui_service_init)
</UL>
<P><STRONG><a name="[51]"></a>button_evt_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, m_ui.o(i.button_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = button_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_button_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>thingy_ui_on_ble_evt</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, m_ui.o(i.thingy_ui_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = thingy_ui_on_ble_evt &rArr; ble_uis_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.m_ui_init)
</UL>
<P><STRONG><a name="[48]"></a>thingy_ui_service_init</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, m_ui.o(i.thingy_ui_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = thingy_ui_service_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.m_ui_init)
</UL>
<P><STRONG><a name="[46]"></a>ui_fds_evt_handler</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, m_ui_flash.o(i.ui_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = ui_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_2
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_0
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui_flash.o(i.m_ui_flash_init)
</UL>
<P><STRONG><a name="[36]"></a>m_timeslot_callback</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, advertiser_beacon_timeslot.o(i.m_timeslot_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = m_timeslot_callback &rArr; m_handle_start &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_start
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_radio_disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> advertiser_beacon_timeslot.o(i.app_beacon_start)
</UL>
<P><STRONG><a name="[be]"></a>configure_default_ioext_gpio_state</STRONG> (Thumb, 208 bytes, Stack size 128 bytes, support_func.o(i.configure_default_ioext_gpio_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = configure_default_ioext_gpio_state &rArr; drv_ext_gpio_cfg &rArr; drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reg_data_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_configure_io_startup
</UL>

<P><STRONG><a name="[39]"></a>ble_evt_handler</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, blend.o(i.ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_diff_compute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blend.o(i.blend_init)
</UL>
<P><STRONG><a name="[d5]"></a>m_ioext_cmd_process</STRONG> (Thumb, 1174 bytes, Stack size 56 bytes, drv_ext_light.o(i.m_ioext_cmd_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_port_mask_create
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
</UL>

<P><STRONG><a name="[10d]"></a>m_ioext_color_select_cmd_send</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, drv_ext_light.o(i.m_ioext_color_select_cmd_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[d8]"></a>m_ioext_led_drv_ctrl</STRONG> (Thumb, 474 bytes, Stack size 32 bytes, drv_ext_light.o(i.m_ioext_led_drv_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_fade_supp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_risefallcfgx_modify
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_onoffcfgx_modify
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_leddriverenable_modify
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
</UL>

<P><STRONG><a name="[d7]"></a>m_ioext_osc_status_change</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, drv_ext_light.o(i.m_ioext_osc_status_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = m_ioext_osc_status_change &rArr;  app_error_handler_bare (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_clock_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[3f]"></a>m_light_timer_handler</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, drv_ext_light.o(i.m_light_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = m_light_timer_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_3
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_push
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_port_mask_create
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_ext_light.o(i.drv_ext_light_init)
</UL>
<P><STRONG><a name="[10b]"></a>m_port_mask_create</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, drv_ext_light.o(i.m_port_mask_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = m_port_mask_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[125]"></a>reg_get</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, drv_sx1509.o(i.reg_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>

<P><STRONG><a name="[df]"></a>reg_set</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drv_sx1509.o(i.reg_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = reg_set &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_set
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>

<P><STRONG><a name="[dc]"></a>register_bits_modify</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, drv_sx1509.o(i.register_bits_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_risefallcfgx_modify
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_onoffcfgx_modify
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_misc_modify
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_leddriverenable_modify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_clock_modify
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_longslewrate_modify
</UL>

<P><STRONG><a name="[127]"></a>diff_above_limit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.diff_above_limit))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[84]"></a>uuid_list_encode</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, ble_advdata.o(i.uuid_list_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uuid_list_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[a7]"></a>conn_params_negotiation</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_conn_params.o(i.conn_params_negotiation))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[11d]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
</UL>

<P><STRONG><a name="[74]"></a>twi_rx_start_transfer</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, nrf_drv_twi.o(i.twi_rx_start_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = twi_rx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>twi_transfer</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.twi_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>

<P><STRONG><a name="[75]"></a>twi_tx_start_transfer</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, nrf_drv_twi.o(i.twi_tx_start_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_button.o(i.detection_delay_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = detection_delay_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[37]"></a>gpiote_event_handler</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_button.o(i.gpiote_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[9a]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, app_timer.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[34]"></a>timeout_handler_scheduled_exec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_timer.o(i.timeout_handler_scheduled_exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = timeout_handler_scheduled_exec &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_timer.o(i.RTC1_IRQHandler)
</UL>
<P><STRONG><a name="[76]"></a>timer_list_handler</STRONG> (Thumb, 682 bytes, Stack size 48 bytes, app_timer.o(i.timer_list_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = timer_list_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_EGU0_IRQHandler
</UL>

<P><STRONG><a name="[f4]"></a>queue_process</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, fstorage.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>

<P><STRONG><a name="[1]"></a>fs_event_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fds.o(i.fs_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = fs_event_handler &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fds.o(fs_data)
</UL>
<P><STRONG><a name="[f7]"></a>gc_record_find_next</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, fds.o(i.gc_record_find_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gc_record_find_next &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[e7]"></a>op_enqueue</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, fds.o(i.op_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>

<P><STRONG><a name="[e8]"></a>queue_process</STRONG> (Thumb, 1746 bytes, Stack size 80 bytes, fds.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + In Cycle
<LI>Call Chain = queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_event_handler
</UL>

<P><STRONG><a name="[ee]"></a>record_find</STRONG> (Thumb, 350 bytes, Stack size 28 bytes, fds.o(i.record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[ec]"></a>record_find_by_desc</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, fds.o(i.record_find_by_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[f1]"></a>write_enqueue</STRONG> (Thumb, 478 bytes, Stack size 72 bytes, fds.o(i.write_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
</UL>

<P><STRONG><a name="[4a]"></a>nrf_log_backend_serial_hexdump_handler</STRONG> (Thumb, 356 bytes, Stack size 304 bytes, nrf_log_backend_serial.o(i.nrf_log_backend_serial_hexdump_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = nrf_log_backend_serial_hexdump_handler &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_log_backend_serial.o(i.nrf_log_backend_hexdump_handler_get)
</UL>
<P><STRONG><a name="[4b]"></a>nrf_log_backend_serial_std_handler</STRONG> (Thumb, 334 bytes, Stack size 312 bytes, nrf_log_backend_serial.o(i.nrf_log_backend_serial_std_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = nrf_log_backend_serial_std_handler &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_log_backend_serial.o(i.nrf_log_backend_std_handler_get)
</UL>
<P><STRONG><a name="[6f]"></a>_DoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_7
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
</UL>

<P><STRONG><a name="[72]"></a>_WriteBlocking</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[7f]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7b]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
</UL>

<P><STRONG><a name="[81]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[80]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[35]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
